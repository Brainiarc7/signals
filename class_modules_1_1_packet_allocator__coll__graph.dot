digraph "Modules::PacketAllocator&lt; DataType &gt;"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Modules::PacketAllocator\l\< DataType \>\n||+ PacketAllocator()\l+ getBuffer()\l+ unblock()\l- operator=()\l- recycle()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -deleter" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{Modules::PacketAllocator\l\< DataType \>::Deleter\n|+ m_allocator\l|+ Deleter()\l+ operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_modules_1_1_packet_allocator_1_1_deleter.html"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -freeBlocks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Signals::Queue\< Event \>\n|# mutex\l# dataQueue\l# dataAvailable\l|+ Queue()\l+ ~Queue()\l+ push()\l+ tryPop()\l+ pop()\l+ clear()\l# pushUnsafe()\l- Queue()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_signals_1_1_queue.html"];
}
