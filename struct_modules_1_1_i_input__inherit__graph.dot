digraph "Modules::IInput"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Modules::IInput\n||+ ~IInput()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Modules::IProcessor\n||+ ~IProcessor()\l+ process()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_modules_1_1_i_processor.html"];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Modules::ConnectedCap\n|- connections\l|+ ConnectedCap()\l+ ~ConnectedCap()\l+ getNumConnections()\l+ connect()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_modules_1_1_connected_cap.html"];
  Node4 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Modules::MetadataCap\n|- m_metadata\l|+ MetadataCap()\l+ ~MetadataCap()\l+ getMetadata()\l+ setMetadata()\l+ setMetadata()\l+ updateMetadata()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_modules_1_1_metadata_cap.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Modules::IMetadataCap\n||+ ~IMetadataCap()\l+ getMetadata()\l+ setMetadata()\l+ setMetadata()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_modules_1_1_i_metadata_cap.html"];
  Node6 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Signals::Queue\< Data \>\n|# mutex\l# dataQueue\l# dataAvailable\l|+ Queue()\l+ ~Queue()\l+ push()\l+ tryPop()\l+ pop()\l+ clear()\l# pushUnsafe()\l- Queue()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_signals_1_1_queue.html"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Modules::Input\< DataType,\l ModuleType \>\n|- module\l|+ Input()\l+ process()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_modules_1_1_input.html"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{Pipelines::PipelinedInput\n|- delegate\l- notify\l|+ PipelinedInput()\l+ ~PipelinedInput()\l+ process()\l+ getNumConnections()\l+ connect()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_pipelines_1_1_pipelined_input.html"];
}
