digraph "Modules::Render::SDLVideo"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Modules::Render::SDLVideo\n|- window\l- renderer\l- texture\l- displayrect\l- m_NumFrames\l- workingThread\l|+ SDLVideo()\l+ ~SDLVideo()\l+ process()\l- doRender()\l- processOneFrame()\l- createTexture()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Modules::ModuleS\n||+ ModuleS()\l+ ~ModuleS()\l+ process()\l+ process()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_modules_1_1_module_s.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Modules::Module\n||+ Module()\l+ ~Module()\l+ flush()\l- Module()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_modules_1_1_module.html"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Modules::IModule\n||+ ~IModule()\l+ process()\l+ flush()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_modules_1_1_i_module.html"];
  Node5 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Modules::InputCap\n|# inputs\l|+ ~InputCap()\l+ addInput()\l+ getNumInputs()\l+ getInput()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_modules_1_1_input_cap.html"];
  Node6 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Modules::OutputCap\n|- outputs\l- m_isLowLatency\l|+ ~OutputCap()\l+ getNumOutputs()\l+ getOutput()\l+ setLowLatency()\l# addOutput()\l}",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_modules_1_1_output_cap.html"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_clock" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{Modules::IClock\n|+ Rate\l|+ now()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_modules_1_1_i_clock.html"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -pictureFormat" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{Modules::PictureFormat\n|+ format\l|+ PictureFormat()\l+ PictureFormat()\l+ operator==()\l+ operator!=()\l+ getSize()\l+ getSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_modules_1_1_picture_format.html"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +res" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{Modules::Resolution\n|+ width\l+ height\l|+ Resolution()\l+ Resolution()\l+ operator==()\l+ operator!=()\l+ operator/()\l+ toString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_modules_1_1_resolution.html"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_dataQueue" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{Signals::Queue\< Data \>\n|# mutex\l# dataQueue\l# dataAvailable\l|+ Queue()\l+ ~Queue()\l+ push()\l+ tryPop()\l+ pop()\l+ clear()\l# pushUnsafe()\l- Queue()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_signals_1_1_queue.html"];
}
